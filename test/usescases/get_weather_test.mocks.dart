// Mocks generated by Mockito 5.1.0 from annotations
// in weather/test/features/weather/domain/usecases/get_weather_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/utils/failures.dart' as _i5;

import 'package:weather_app/data/repository/weather_repository.dart' as _i3;
import 'package:weather_app/utils/lat_long.dart' as _i7;
import 'package:weather_app/data/entities/weather.dart' as _i6;

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i3.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Weather>> getWeather(
          _i7.LatLong? latLong) =>
      (super.noSuchMethod(Invocation.method(#getWeather, [latLong]),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.Weather>>.value(
                  _FakeEither_0<_i5.Failure, _i6.Weather>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Weather>>);
}
